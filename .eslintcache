[{"D:\\tuts\\testing\\src\\index.js":"1","D:\\tuts\\testing\\src\\App.js":"2","D:\\tuts\\testing\\src\\createStore.js":"3","D:\\tuts\\testing\\src\\components\\header\\index.js":"4","D:\\tuts\\testing\\src\\components\\todoContainer\\index.js":"5","D:\\tuts\\testing\\src\\reducers\\index.js":"6","D:\\tuts\\testing\\src\\reducers\\todoReducer.js":"7","D:\\tuts\\testing\\src\\components\\todoItem\\index.js":"8","D:\\tuts\\testing\\src\\actions\\index.js":"9"},{"size":442,"mtime":1610965004283,"results":"10","hashOfConfig":"11"},{"size":261,"mtime":1610952159711,"results":"12","hashOfConfig":"11"},{"size":121,"mtime":1610949196795,"results":"13","hashOfConfig":"11"},{"size":222,"mtime":1610951572057,"results":"14","hashOfConfig":"11"},{"size":957,"mtime":1610965263135,"results":"15","hashOfConfig":"11"},{"size":126,"mtime":1610953594833,"results":"16","hashOfConfig":"11"},{"size":859,"mtime":1610964737734,"results":"17","hashOfConfig":"11"},{"size":1052,"mtime":1610965437309,"results":"18","hashOfConfig":"11"},{"size":204,"mtime":1610965206842,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1h3ky0a",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\tuts\\testing\\src\\index.js",["41"],"D:\\tuts\\testing\\src\\App.js",[],"D:\\tuts\\testing\\src\\createStore.js",[],"D:\\tuts\\testing\\src\\components\\header\\index.js",["42"],"import React, { useState } from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header data-testid=\"headerComponent\">\r\n      <h1 data-testid=\"headerText\">Todos</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\tuts\\testing\\src\\components\\todoContainer\\index.js",[],"D:\\tuts\\testing\\src\\reducers\\index.js",[],"D:\\tuts\\testing\\src\\reducers\\todoReducer.js",["43"],"const initialState = {\r\n  todos: [],\r\n};\r\n\r\nconst nextTodoId = (todos) => {\r\n  return todos.reduce((maxId, todo) => Math.max(maxId, todo.id), -1) + 1;\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"addTodo\":\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos,\r\n          {\r\n            id: nextTodoId(state.todos),\r\n            text: action.payload.text,\r\n            completed: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case \"toggleTodo\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== action.payload.id) {\r\n            return todo;\r\n          }\r\n\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          };\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\tuts\\testing\\src\\components\\todoItem\\index.js",["44"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./styles.scss\";\r\nimport InCompleteTodoIcon from \"../../assets/images/tick.svg\";\r\nimport CompleteTodoIcon from \"../../assets/images/greenTick.svg\";\r\nimport { toggleComplete } from \"../../actions\";\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleComplete = this.handleComplete.bind(this);\r\n  }\r\n\r\n  handleComplete = () => {\r\n    this.props.toggleComplete(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    let { id, text, completed } = this.props;\r\n    return (\r\n      <li key={id} className=\"todoListItem\">\r\n        {text}\r\n        <img\r\n          src={completed ? CompleteTodoIcon : InCompleteTodoIcon}\r\n          className=\"todoCompleteIcon\"\r\n          title={completed ? \"Mark as not completed\" : \"Mark as completed\"}\r\n          onClick={this.handleComplete}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { toggleComplete };\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoItem);\r\n","D:\\tuts\\testing\\src\\actions\\index.js",[],{"ruleId":"45","severity":1,"message":"46","line":9,"column":7,"nodeType":"47","messageId":"48","endLine":9,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":9,"column":1,"nodeType":"52","endLine":42,"endColumn":3},{"ruleId":"53","severity":1,"message":"54","line":25,"column":9,"nodeType":"55","endLine":30,"endColumn":11},"no-unused-vars","'unsubscribe' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]